class Cart{constructor(t={}){this.settings={cartProdSelector:".product-mini-box",catalogProdSelector:".product-box",cartSelector:".cart",cartItemsContainerSelector:"#cart-item-group",dataSource:"mock_cart_data.json"},Object.assign(this.settings,t),this.items=[],this.maxID=1e3,this._init()}_init(){localStorage.getItem("savedCart")||$.get(this.settings.dataSource).done(t=>this._load(t)).fail(t=>{console.log("can't download json data ")}),this._updateTotalView()}_load(t){for(const e of t.content)this.items.push(e),this._renderItem(e);this._updateTotalView()}_getAmount(){let t=0;for(const e of this.items)t+=e.price*e.quantity;return t}_getQuantity(){let t=0;for(const e of this.items)t+=e.quantity;return t}_updateItemView(t){const e=$(`.cart-item[data-productid = "${t.id}"]`);e.find(".cart-item-qty").text(t.quantity),e.find(".cart-item-price").text(t.price)}_updateTotalView(){$(this.settings.cartSelector).find(".total-price").text("$"+this._getAmount().toFixed(2)),this.items.length?$(".cart-qty").text(this._getQuantity()).show(400):$(".cart-qty").hide(400)}addProduct(t){const e=$(t),i=this.items.find(t=>t.id===e.data("id"));if(i)i.quantity++,this._updateItemView(i);else{let t=new CartItem(e.data("id"),e.data("name"),e.data("price"),e.data("img-src"));this.items.push(t),this._renderItem(t)}this._updateTotalView()}_renderRating(t){let e="";for(let i=0;i<parseInt(t);i++)e+='<i class="fas fa-star"></i>';return t%1&&(e+='<i class="fas fa-star-half-alt"></i>'),e}_renderItem(t){const e=$("<tr/>",{class:"cart-item","data-productID":t.id});e.append($(`<td><img style="height: 86px; width:72px" src="${t.imgSrc}" alt="cart-item"></td>`)),e.append($(`\n        <td>\n          <h3>${t.name}</h3>\n          <p class="item-rating">${this._renderRating(t.rating)}</p>\n          <p class="item-qty-price">\n            <span class="cart-item-qty">${t.quantity}</span>\n            x $<span class="cart-item-price">${t.price}</span>\n          </p>\n        </td>\n      `));const i=$('<td class="remove-item"><i class="fas fa-times-circle"></i></td>');e.append(i),i.click(()=>this._removeItem(t.id)),e.appendTo($(this.settings.cartItemsContainerSelector))}_removeItem(t){const e=this.items.find(e=>e.id===+t);e&&(e.quantity--,this._updateItemView(e),e.quantity<1&&(this.items=this.items.filter(e=>e.id!==t),$(`.cart-item[data-productid = "${t}"]`).remove()),this._updateTotalView())}}class CartItem{constructor(t,e,i,a="https://placehold.it/72x86",s=1){this.price=+i,this.id=t,this.name=e,this.quantity=+s,this.imgSrc=a}}class PageCart extends Cart{constructor(t={}){super(t),this.settings.pageCartSelector=".shopping-cart__item-group",Object.assign(this.settings,t),console.dir(this.settings)}_renderItem(t){super._renderItem(t);const e=$("<tr/>",{class:"cart-item","data-productID":t.id});e.append($(`\n      <td class="prod-info-detail">\n        <dl class="cart-box">\n          <a href="#">\n            <dt class="prod-pic">\n              <img src="${t.imgSrc}" alt="cart-item">\n            </dt>\n            <dd class="prod-desc">\n              <h2 class="prod-name">${t.name}</h2>\n              <dl>\n                <dt class="char">Color:</dt>\n                <dd>${t.color}</dd>\n                <br>\n                <dt class="char">Size:</dt>\n                <dd>${t.size}</dd>\n              </dl>\n            </dd>\n          </a>\n        </dl>\n      </td>\n      <td class="prod-price">$${t.price}</td>\n      <td class="prod-quantity"><input class=".cart-item-qty" type="number" value="${t.quantity}" min="1"></td>\n      <td class="prod-shipping">${t.shipping}</td>\n      <td class="prod-subtotal">$${t.price*t.quantity}</td>\n    `));const i=$('<td class="prod-operate"><i class="fas fa-times-circle remove-item"></i></td>');e.append(i),i.click(()=>this._removeItem(t.id)),e.appendTo($(this.settings.pageCartSelector))}_updateItemView(t){super._updateItemView(t),console.dir($(`.cart-item[data-productid="${t.id}"]`).find("input").val(t.quantity))}}